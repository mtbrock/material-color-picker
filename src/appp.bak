import { Component, Fragment } from 'react'
import { MuiThemeProvider, createMuiTheme, withStyles } from '@material-ui/core/styles'
import { red, blue, blueGrey, green } from '@material-ui/core/colors'
import * as muiColors from '@material-ui/core/colors'
import Button from '@material-ui/core/Button'
import TouchRipple from '@material-ui/core/ButtonBase'
import Input from '@material-ui/core/Input'
import Paper from '@material-ui/core/Paper'
import Slider from '@material-ui/lab/Slider'
import ColorLabel from './ColorLabel'
import ColorPicker from './ColorPicker'
import ColorApp from './ColorApp'
import ColorPreferences from './ColorPreferences'
import './App.scss'
import Rt from './Rt'
import { connect } from 'react-redux'
import { Provider } from 'react-redux'
import { createStore } from 'redux'
import rootReducer from './reducers'

const store = createStore(rootReducer)


const theme = createMuiTheme({
  palette: {
    type: 'dark',
    primary: red,
    secondary: blue,
    error: green,
    background: blueGrey
  },
  overrides: {
    MuiInput: {
      root: {
        flexGrow: 1,
      }
    },
    MuiButton: {
      root: {
      }
    }
  }
})

const styles = {
  demoContainer: {
    background: theme.palette.background[800],
    composes: 'demo-container',
  },
  paletteRow: {
    margin: '1px 0'
  },
  paletteButton: {
    borderRadius: 0,
    composes: 'palette-btn',
    height: '2em',
    marginRight: 1,
    padding: 0,
    width: '2em',
  }
}

const colorKeys = [
  'primary',
  'secondary',
]

class App extends Component {
  constructor(props) {
    super(props)
    this.state = {
      activeKey: 'primary',
      sliderValue: 50,
      primary: blue[300],
      secondary: green[300],
      theme: theme,
    }
    this.onColorClick = this.onColorClick.bind(this)
    this.onLabelClick = this.onLabelClick.bind(this)
    this.onSliderChange = this.onSliderChange.bind(this)
  }

  onLabelClick(event, key) {
    this.setState({
      activeKey: key,
    })
  }

  onSliderChange(event, sliderValue) {
    this.setState({ sliderValue })
  }

  onColorClick(event, color) {
    const newTheme = createMuiTheme({
      palette: {}
    })
    this.setState((prevState, props) => ({
      [prevState.activeKey]: color,
    }))
  }

  render() {
    const appTheme = createMuiTheme({
      palette: {
        type: 'dark',
        primary: { main: this.state.primary },
        secondary: { main: this.state.secondary },
      }
    })
    const { classes } = this.props
    return (
      <Provider store={store}>
        <div className="app-container">
          <ColorApp />
          <Rt />
        </div>
      </Provider>
    )
  }
}

export default withStyles(styles)(App)
