/**
 * Helpers
 */
/**
 * Media query
 *
 * Mixins accept parameters in em units
 */
/**
 * Retrieves a color value from the $material-colors Sass map
 * Inspired by https://github.com/nilskaspersson/Google-Material-UI-Color-Palette/
 *
 * @function
 * @param {string} color-name             - quoted, lower-case, dasherized color
 *                                          name (e.g. 'pink', 'amber')
 * @param {string} [color-variant='500']  - quoted, lowercase color variant (e.g.
 *                                          '200', 'a100')
 */
.color-picker-container {
  margin: .5em; }

.color-picker-button {
  width: 2em;
  height: 2em;
  margin-right: 1px !important;
  padding: 0;
  position: relative;
  transition: border-radius 0.3s ease; }
  .color-picker-button:hover {
    border-radius: 1em;
    transition: border-radius 0.1s ease; }
  .color-picker-button::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    background: rgba(33, 33, 33, 0.3);
    transition: all 0.3s ease; }
  .color-picker-button:hover::after {
    border-radius: 1em; }
  .color-picker-button:active::after {
    opacity: 1;
    transition: unset; }

.color-picker-row {
  margin: 1px 1px 1px 0;
  display: flex; }

.color-prefs-container {
  display: flex;
  border-style: solid;
  border-color: #bdbdbd;
  border-width: 1px 0 0 1px; }

.color-prefs-label-container {
  display: flex;
  flex-wrap: wrap;
  width: 20em; }

.color-prefs-picker-container {
  border-style: solid;
  border-color: #9e9e9e;
  border-width: 0 1px 1px 0; }

/**
 * Helpers
 */
/**
 * Media query
 *
 * Mixins accept parameters in em units
 */
/**
 * Retrieves a color value from the $material-colors Sass map
 * Inspired by https://github.com/nilskaspersson/Google-Material-UI-Color-Palette/
 *
 * @function
 * @param {string} color-name             - quoted, lower-case, dasherized color
 *                                          name (e.g. 'pink', 'amber')
 * @param {string} [color-variant='500']  - quoted, lowercase color variant (e.g.
 *                                          '200', 'a100')
 */
html {
  font-family: Roboto, Helvetica, sans-serif;
  background: #eeeeee; }

pre {
  background: #e0e0e0;
  margin: 1em;
  padding: 1em;
  width: 24em; }

code {
  line-height: 150%; }

.demo-container {
  width: 30em;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around; }
  .demo-container > * {
    margin: .5em !important; }
  .demo-container input {
    flex: 1 1 100%; }

.tr {
  width: 10em;
  height: 10em;
  background: blue; }

.app-container {
  display: flex;
  flex-direction: row;
  justify-content: center; }

.column-two {
  display: flex; }

.flex-column {
  display: flex;
  flex-direction: column;
  justify-content: center; }

p:first-letter {
  text-transform: capitalize; }

.palette-container {
  background: white;
  padding: .5em; }

.color-label-text {
  color: #757575; }
  .color-label-text.activated {
    color: #424242; }

.color-label-container {
  align-items: center;
  background: transparent;
  border-style: solid;
  border-color: #9e9e9e;
  border-width: 0 1px 1px 0;
  display: inline-block;
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: flex-start;
  position: relative;
  text-align: center;
  width: 10em;
  z-index: 1;
  transition: background-color .2s ease; }
  .color-label-container:active {
    background: rgba(33, 33, 33, 0.1);
    transition: unset; }
  .color-label-container:hover::after {
    opacity: 1; }
  .color-label-container:active::after {
    opacity: 0;
    transition: unset; }
  .color-label-container::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    transition: opacity .2s ease; }

.color-label-container.activated {
  background: white;
  z-index: 2; }
  .color-label-container.activated:active {
    background: #fafafa; }
  .color-label-container.activated:hover::after {
    opacity: 1; }
  .color-label-container.activated:active::after {
    opacity: .6;
    transition: unset; }
  .color-label-container.activated::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 1;
    box-shadow: 0 3px 12px rgba(0, 0, 0, 0.3);
    transition: opacity .2s ease; }

.color-label-text {
  font-size: 1.2em; }
  .color-label-text:first-letter {
    text-transform: capitalize; }

.color-label-preview {
  width: 9rem;
  height: 9rem; }

.color-label-preview-top {
  width: 9rem;
  height: 9rem;
  display: flex;
  justify-content: center;
  align-items: center; }

.color-label-preview-bottom {
  width: 9rem;
  height: 4.5rem;
  display: flex;
  font-size: .8em;
  line-height: 2em; }
  .color-label-preview-bottom div {
    flex: 1; }

